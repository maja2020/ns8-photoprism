#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import agent.tasks
import os

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

# Setup default values on first run
host = data.get("host")
h2hs = data.get("http2https", False)
le = data.get("lets_encrypt", False)

try: 
    traefik_config = agent.read_envfile("environment")
except:
    # Setup configuration from user input.
    agent.set_env("TRAEFIK_HOST", host)
    agent.set_env("TRAEFIK_HTTP2HTTPS", h2hs)
    agent.set_env("TRAEFIK_LETS_ENCRYPT", le)
    # Make sure everything is saved inside the environment file
    # just before starting systemd unit
    agent.dump_env()
    sys.exit(0)

# at this point there is already a running config. 
# check if traefik parameter is changed: 
for key, value in traefik_config.items():
    mykey = key.replace("_TRAEFIK_", "").lower()
    if data.get(mykey) is not None:
        agent.set_env(key,value)
        print("changed %s to %s" %(key, value))

# Find default traefik instance for current node
default_traefik_id = agent.resolve_agent_id('traefik@node')
if default_traefik_id is None:
    sys.exit(2)

response = agent.tasks.run(
    agent_id=agent.resolve_agent_id('traefik@node'),
    action='set-route',
    data={
        'instance': os.environ['MODULE_ID'],
        'url':  'http://127.0.0.1:' + os.environ["TCP_PORT"],
        'host': host,
        'http2https': h2hs,
        'lets_encrypt': le
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response['exit_code'] == 0)